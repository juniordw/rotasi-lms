
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\globals.css ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\globals.css" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\globals.css ===
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    @apply scroll-smooth;
  }

  body {
    @apply bg-white text-neutral-900 dark:bg-neutral-900 dark:text-neutral-50;
  }

  /* Dialog styling for video modal */
  dialog {
    @apply backdrop:bg-neutral-900/50;
  }

  dialog::backdrop {
    @apply backdrop-blur-sm;
  }
}

@layer utilities {
  .animate-in {
    animation: animateIn 0.3s ease-in-out;
  }

  .slide-in-from-right {
    animation: slideInFromRight 0.3s ease-in-out;
  }
}

@keyframes animateIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\layout.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\layout.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\layout.tsx ===
import './globals.css'
import type { Metadata } from 'next'
import Providers from './providers'

export const metadata: Metadata = {
  title: 'ROTASI - Repositori Online untuk Pelatihan dan Informasi',
  description: 'Platform pembelajaran yang komprehensif dengan akses ke kursus berkualitas tinggi dan fitur pembelajaran interaktif',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="id">
      <body>
        <Providers>
          {children}
        </Providers>
      </body>
    </html>
  )
}
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\page.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\page.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\page.tsx ===
'use client';

import HeroSection from '@/components/sections/HeroSection';
import FeaturesSection from '@/components/sections/FeaturesSection';
import CoursesSection from '@/components/sections/CoursesSection'; 
import TestimonialsSection from '@/components/sections/TestimonialsSection';
import CtaSection from '@/components/sections/CtaSection';
import MainLayout from '@/components/layout/MainLayout';

// Import font CSS
import '@fontsource/inter/400.css';
import '@fontsource/inter/500.css';
import '@fontsource/inter/600.css';
import '@fontsource/inter/700.css';
import '@fontsource/poppins/600.css';
import '@fontsource/poppins/700.css';

export default function Home() {
  return (
    <MainLayout>
      <HeroSection />
      <FeaturesSection />
      <CoursesSection />
      <TestimonialsSection />
      <CtaSection />
    </MainLayout>
  );
}
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\providers.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\providers.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\providers.tsx ===
'use client';

import { useEffect } from 'react';
import { Provider } from 'react-redux';
import { store } from '@/redux/store';
import { setTheme } from '@/redux/features/themeSlice';
import { QueryClientProvider } from '@tanstack/react-query';
import { queryClient } from '@/lib/reactQuery';
import { ToastProvider } from '@/components/ui/Toaster';

export default function Providers({ children }: { children: React.ReactNode }) {
  // Initialize theme from localStorage on client-side
  useEffect(() => {
    // Get theme preference from localStorage
    const savedTheme = localStorage.getItem('darkMode');
    if (savedTheme !== null) {
      const isDarkMode = savedTheme === 'true';
      
      // Set theme in Redux store
      store.dispatch(setTheme(isDarkMode));
      
      // Apply theme to document
      if (isDarkMode) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    } else {
      // Check for system preference if no saved preference
      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
      
      // Save system preference to localStorage and Redux
      localStorage.setItem('darkMode', prefersDark.toString());
      store.dispatch(setTheme(prefersDark));
      
      if (prefersDark) {
        document.documentElement.classList.add('dark');
      }
    }
  }, []);

  return (
    <QueryClientProvider client={queryClient}>
      <Provider store={store}>
        <ToastProvider>
          {children}
        </ToastProvider>
      </Provider>
    </QueryClientProvider>
  );
}
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\login\page.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\login\page.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\login\page.tsx ===
'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import { useDispatch, useSelector } from 'react-redux';
import { FiEye, FiEyeOff, FiArrowLeft, FiMoon, FiSun, FiLock, FiMail } from 'react-icons/fi';
import { toggleTheme } from '@/redux/features/themeSlice';
import { RootState } from '@/redux/store';
import { useToast } from '@/components/ui/Toaster';
import Logo from '@/components/ui/Logo';
import Button from '@/components/ui/Button';

// Apply dark mode manually on client-side
const applyTheme = (isDark: boolean) => {
  if (isDark) {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
  }
};

const LoginPage = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [rememberMe, setRememberMe] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');

  const router = useRouter();
  const dispatch = useDispatch();
  const darkMode = useSelector((state: RootState) => state.theme.darkMode);
  const { showToast } = useToast();

  const handleThemeToggle = () => {
    dispatch(toggleTheme());
    // Also update the document class for immediate visual change
    applyTheme(!darkMode);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setIsLoading(true);

    try {
      const response = await fetch('http://localhost:5000/api/auth/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, password }),
      });

      const data = await response.json();

      if (response.ok && data.success) {
        // Save tokens to localStorage
        localStorage.setItem('accessToken', data.accessToken);
        localStorage.setItem('refreshToken', data.refreshToken);
        
        if (rememberMe) {
          localStorage.setItem('rememberedEmail', email);
        } else {
          localStorage.removeItem('rememberedEmail');
        }

        showToast('Login berhasil!', 'success');
        router.push('/dashboard'); // Redirect to dashboard
      } else {
        setError(data.message || 'Terjadi kesalahan saat login');
      }
    } catch (err) {
      console.error('Login error:', err);
      setError('Terjadi kesalahan koneksi ke server');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="flex min-h-screen bg-gradient-to-br from-white to-primary-50 dark:from-neutral-900 dark:to-primary-900/20">
      {/* Left side - Back button and theme toggle */}
      <div className="fixed left-4 top-4 z-10 flex items-center justify-between gap-4">
        <Link href="/" className="flex items-center text-neutral-600 transition-colors hover:text-primary-400 dark:text-neutral-300">
          <FiArrowLeft className="mr-2" />
          <span className="hidden sm:inline">Kembali</span>
        </Link>
        <button
          onClick={handleThemeToggle}
          className="rounded-full p-2 text-neutral-700 transition-colors hover:bg-neutral-200/60 dark:text-neutral-200 dark:hover:bg-neutral-800/60"
          aria-label="Toggle theme"
        >
          {darkMode ? <FiSun size={20} /> : <FiMoon size={20} />}
        </button>
      </div>

      <div className="flex w-full flex-col items-center justify-center p-4 sm:p-8 md:p-12">
        <div className="w-full max-w-md rounded-2xl bg-white/80 p-8 shadow-xl backdrop-blur-sm dark:bg-neutral-800/80 sm:p-10">
          <div className="mb-8 flex flex-col items-center">
            <Logo className="mb-6" />
            <h1 className="mb-2 text-center font-poppins text-3xl font-bold tracking-tight text-neutral-900 dark:text-white">
              Welcome Back!
            </h1>
            <p className="text-center text-neutral-600 dark:text-neutral-400">
              Masuk untuk melanjutkan pembelajaran Anda
            </p>
          </div>

          {error && (
            <div className="mb-6 rounded-lg bg-red-50 p-4 text-sm text-red-500 dark:bg-red-900/20">
              {error}
            </div>
          )}

          <form className="space-y-5" onSubmit={handleSubmit}>
            <div className="space-y-1">
              <label htmlFor="email" className="block text-sm font-medium text-neutral-700 dark:text-neutral-300">
                Email
              </label>
              <div className="relative">
                <div className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500 dark:text-neutral-400">
                  <FiMail size={18} />
                </div>
                <input
                  id="email"
                  type="email"
                  autoComplete="email"
                  required
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className="block w-full rounded-xl border border-neutral-300 bg-white px-3 py-3 pl-10 shadow-sm transition-colors focus:border-primary-400 focus:outline-none focus:ring-primary-400 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-white dark:focus:border-primary-400"
                  placeholder="nama@email.com"
                />
              </div>
            </div>

            <div className="space-y-1">
              <div className="flex items-center justify-between">
                <label htmlFor="password" className="block text-sm font-medium text-neutral-700 dark:text-neutral-300">
                  Password
                </label>
                <Link
                  href="/forgot-password"
                  className="text-sm font-medium text-primary-400 transition-colors hover:text-primary-500"
                >
                  Lupa password?
                </Link>
              </div>
              <div className="relative">
                <div className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500 dark:text-neutral-400">
                  <FiLock size={18} />
                </div>
                <input
                  id="password"
                  type={showPassword ? 'text' : 'password'}
                  autoComplete="current-password"
                  required
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  className="block w-full rounded-xl border border-neutral-300 bg-white px-3 py-3 pl-10 pr-10 shadow-sm transition-colors focus:border-primary-400 focus:outline-none focus:ring-primary-400 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-white dark:focus:border-primary-400"
                  placeholder="••••••••"
                />
                <button
                  type="button"
                  className="absolute inset-y-0 right-0 flex items-center px-3 text-neutral-500 transition-colors hover:text-neutral-700 dark:text-neutral-400 dark:hover:text-neutral-300"
                  onClick={() => setShowPassword(!showPassword)}
                >
                  {showPassword ? <FiEyeOff size={18} /> : <FiEye size={18} />}
                </button>
              </div>
            </div>

            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <input
                  id="remember-me"
                  name="remember-me"
                  type="checkbox"
                  checked={rememberMe}
                  onChange={(e) => setRememberMe(e.target.checked)}
                  className="h-4 w-4 rounded border-neutral-300 text-primary-400 transition-colors focus:ring-primary-400 dark:border-neutral-700"
                />
                <label htmlFor="remember-me" className="ml-2 block text-sm text-neutral-700 dark:text-neutral-300">
                  Ingat saya
                </label>
              </div>
            </div>

            <div className="pt-2">
              <Button
                type="submit"
                variant="primary"
                fullWidth
                className="rounded-xl py-3 transition-all hover:shadow-lg"
                disabled={isLoading}
              >
                {isLoading ? 'Memproses...' : 'Masuk Sekarang'}
              </Button>
            </div>
          </form>

          <div className="mt-6">
            <div className="relative">
              <div className="absolute inset-0 flex items-center">
                <div className="w-full border-t border-neutral-300 dark:border-neutral-700"></div>
              </div>
              <div className="relative flex justify-center text-sm">
                <span className="bg-white px-2 text-neutral-500 dark:bg-neutral-800/90 dark:text-neutral-400">
                  Atau masuk dengan
                </span>
              </div>
            </div>

            <div className="mt-6 grid grid-cols-2 gap-3">
              <button
                type="button"
                className="inline-flex items-center justify-center rounded-xl border border-neutral-300 bg-white px-4 py-2.5 text-neutral-700 shadow-sm transition-colors hover:bg-neutral-50 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-neutral-300 dark:hover:bg-neutral-700"
              >
                <svg className="mr-2 h-5 w-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z"/>
                </svg>
                Google
              </button>
              <button
                type="button"
                className="inline-flex items-center justify-center rounded-xl border border-neutral-300 bg-white px-4 py-2.5 text-neutral-700 shadow-sm transition-colors hover:bg-neutral-50 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-neutral-300 dark:hover:bg-neutral-700"
              >
                <svg className="mr-2 h-5 w-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M13.397,20.997v-8.196h2.765l0.411-3.209h-3.176V7.548c0-0.926,0.258-1.56,1.587-1.56h1.684V3.127 C15.849,3.039,15.025,2.997,14.201,3c-2.444,0-4.122,1.492-4.122,4.231v2.355H7.332v3.209h2.753v8.202H13.397z"/>
                </svg>
                Facebook
              </button>
            </div>
          </div>

          <div className="mt-6 text-center">
            <p className="text-sm text-neutral-600 dark:text-neutral-400">
              Belum punya akun?{' '}
              <Link href="/register" className="font-semibold text-primary-400 hover:text-primary-500">
                Daftar sekarang
              </Link>
            </p>
          </div>
        </div>
      </div>
      
      {/* Decorative elements */}
      <div className="pointer-events-none fixed -bottom-16 -left-16 h-64 w-64 rounded-full bg-primary-300/20 blur-3xl filter dark:bg-primary-600/10"></div>
      <div className="pointer-events-none fixed -top-32 right-10 h-96 w-96 rounded-full bg-coral-300/20 blur-3xl filter dark:bg-coral-600/10"></div>
      <div className="pointer-events-none fixed bottom-10 right-10 h-64 w-64 rounded-full bg-mint-300/20 blur-3xl filter dark:bg-mint-600/10"></div>
    </div>
  );
};

export default LoginPage;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\register\page.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\register\page.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\app\register\page.tsx ===
'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import Link from 'next/link';
import { useDispatch, useSelector } from 'react-redux';
import { FiEye, FiEyeOff, FiArrowLeft, FiMoon, FiSun, FiLock, FiMail, FiUser, FiBriefcase } from 'react-icons/fi';
import { toggleTheme } from '@/redux/features/themeSlice';
import { RootState } from '@/redux/store';
import { useToast } from '@/components/ui/Toaster';
import Logo from '@/components/ui/Logo';
import Button from '@/components/ui/Button';

// Apply dark mode manually on client-side
const applyTheme = (isDark: boolean) => {
  if (isDark) {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
  }
};

const RegisterPage = () => {
  const [formData, setFormData] = useState({
    username: '',
    email: '',
    password: '',
    full_name: '',
    department: '',
  });
  const [showPassword, setShowPassword] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [step, setStep] = useState(1); // We'll use a 2-step registration process for a better UX
  
  const router = useRouter();
  const dispatch = useDispatch();
  const darkMode = useSelector((state: RootState) => state.theme.darkMode);
  const { showToast } = useToast();
  
  const handleThemeToggle = () => {
      dispatch(toggleTheme());
      // Also update the document class for immediate visual change
      applyTheme(!darkMode);
    };
  
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };
  
  const nextStep = (e: React.FormEvent) => {
    e.preventDefault();
    if (formData.full_name && formData.username && formData.email) {
      setStep(2);
    } else {
      setError('Harap isi semua kolom yang diperlukan');
    }
  };
  
  const prevStep = () => {
    setStep(1);
    setError('');
  };
  
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setIsLoading(true);
    
    try {
      const response = await fetch('http://localhost:5000/api/auth/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });
      
      const data = await response.json();
      
      if (response.ok && data.success) {
        // Save tokens to localStorage
        localStorage.setItem('accessToken', data.accessToken);
        localStorage.setItem('refreshToken', data.refreshToken);
        
        showToast('Registrasi berhasil!', 'success');
        router.push('/dashboard');
      } else {
        setError(data.message || 'Terjadi kesalahan saat mendaftar');
      }
    } catch (err) {
      console.error('Registration error:', err);
      setError('Terjadi kesalahan koneksi ke server');
    } finally {
      setIsLoading(false);
    }
  };
  
  const departments = [
    'Pilih Departemen',
    'IT & Pengembangan',
    'Pemasaran & Penjualan',
    'Keuangan & Akuntansi',
    'Operasional',
    'Sumber Daya Manusia',
    'Penelitian & Pengembangan',
    'Layanan Pelanggan',
    'Desain & Kreatif',
    'Pendidikan',
    'Lainnya'
  ];
  
  return (
    <div className="flex min-h-screen bg-gradient-to-br from-white to-primary-50 dark:from-neutral-900 dark:to-primary-900/20">
      {/* Left side - Back button and theme toggle */}
      <div className="fixed left-4 top-4 z-10 flex items-center justify-between gap-4">
        <Link href="/" className="flex items-center text-neutral-600 transition-colors hover:text-primary-400 dark:text-neutral-300">
          <FiArrowLeft className="mr-2" />
          <span className="hidden sm:inline">Kembali</span>
        </Link>
        <button
          onClick={handleThemeToggle}
          className="rounded-full p-2 text-neutral-700 transition-colors hover:bg-neutral-200/60 dark:text-neutral-200 dark:hover:bg-neutral-800/60"
          aria-label="Toggle theme"
        >
          {darkMode ? <FiSun size={20} /> : <FiMoon size={20} />}
        </button>
      </div>

      <div className="flex w-full flex-col items-center justify-center p-4 sm:p-8 md:p-12">
        <div className="w-full max-w-md rounded-2xl bg-white/80 p-8 shadow-xl backdrop-blur-sm dark:bg-neutral-800/80 sm:p-10">
          <div className="mb-6 flex flex-col items-center">
            <Logo className="mb-5" />
            <h1 className="mb-2 text-center font-poppins text-3xl font-bold tracking-tight text-neutral-900 dark:text-white">
              {step === 1 ? 'Buat Akun' : 'Sedikit Lagi!'}
            </h1>
            <p className="text-center text-neutral-600 dark:text-neutral-400">
              {step === 1 
                ? 'Bergabung dengan ROTASI untuk memulai perjalanan belajar' 
                : 'Lengkapi informasi untuk menyelesaikan pendaftaran'}
            </p>
          </div>

          {/* Progress bar */}
          <div className="mb-6 flex items-center justify-center">
            <div className="flex w-full max-w-[200px] items-center">
              <div className={`flex h-6 w-6 items-center justify-center rounded-full ${step >= 1 ? 'bg-primary-400 text-white' : 'bg-neutral-200 dark:bg-neutral-700'}`}>
                1
              </div>
              <div className={`h-1 flex-1 ${step >= 2 ? 'bg-primary-400' : 'bg-neutral-200 dark:bg-neutral-700'}`}></div>
              <div className={`flex h-6 w-6 items-center justify-center rounded-full ${step >= 2 ? 'bg-primary-400 text-white' : 'bg-neutral-200 dark:bg-neutral-700'}`}>
                2
              </div>
            </div>
          </div>

          {error && (
            <div className="mb-6 rounded-lg bg-red-50 p-4 text-sm text-red-500 dark:bg-red-900/20">
              {error}
            </div>
          )}
          
          {step === 1 ? (
            <form className="space-y-4" onSubmit={nextStep}>
              <div className="space-y-1">
                <label htmlFor="full_name" className="block text-sm font-medium text-neutral-700 dark:text-neutral-300">
                  Nama Lengkap
                </label>
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500 dark:text-neutral-400">
                    <FiUser size={18} />
                  </div>
                  <input
                    id="full_name"
                    name="full_name"
                    type="text"
                    autoComplete="name"
                    required
                    value={formData.full_name}
                    onChange={handleChange}
                    className="block w-full rounded-xl border border-neutral-300 bg-white px-3 py-3 pl-10 shadow-sm transition-colors focus:border-primary-400 focus:outline-none focus:ring-primary-400 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-white dark:focus:border-primary-400"
                    placeholder="Nama lengkap Anda"
                  />
                </div>
              </div>
              
              <div className="space-y-1">
                <label htmlFor="username" className="block text-sm font-medium text-neutral-700 dark:text-neutral-300">
                  Username
                </label>
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500 dark:text-neutral-400">
                    <FiUser size={18} />
                  </div>
                  <input
                    id="username"
                    name="username"
                    type="text"
                    autoComplete="username"
                    required
                    value={formData.username}
                    onChange={handleChange}
                    className="block w-full rounded-xl border border-neutral-300 bg-white px-3 py-3 pl-10 shadow-sm transition-colors focus:border-primary-400 focus:outline-none focus:ring-primary-400 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-white dark:focus:border-primary-400"
                    placeholder="Username yang unik"
                  />
                </div>
              </div>
              
              <div className="space-y-1">
                <label htmlFor="email" className="block text-sm font-medium text-neutral-700 dark:text-neutral-300">
                  Email
                </label>
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500 dark:text-neutral-400">
                    <FiMail size={18} />
                  </div>
                  <input
                    id="email"
                    name="email"
                    type="email"
                    autoComplete="email"
                    required
                    value={formData.email}
                    onChange={handleChange}
                    className="block w-full rounded-xl border border-neutral-300 bg-white px-3 py-3 pl-10 shadow-sm transition-colors focus:border-primary-400 focus:outline-none focus:ring-primary-400 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-white dark:focus:border-primary-400"
                    placeholder="nama@email.com"
                  />
                </div>
              </div>
              
              <div className="pt-2">
                <Button
                  type="submit"
                  variant="primary"
                  fullWidth
                  className="rounded-xl py-3 transition-all hover:shadow-lg"
                >
                  Lanjutkan
                </Button>
              </div>
            </form>
          ) : (
            <form className="space-y-4" onSubmit={handleSubmit}>
              <div className="space-y-1">
                <label htmlFor="department" className="block text-sm font-medium text-neutral-700 dark:text-neutral-300">
                  Departemen
                </label>
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500 dark:text-neutral-400">
                    <FiBriefcase size={18} />
                  </div>
                  <select
                    id="department"
                    name="department"
                    required
                    value={formData.department}
                    onChange={handleChange}
                    className="block w-full rounded-xl border border-neutral-300 bg-white px-3 py-3 pl-10 shadow-sm transition-colors focus:border-primary-400 focus:outline-none focus:ring-primary-400 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-white dark:focus:border-primary-400"
                  >
                    {departments.map((dept, index) => (
                      <option key={index} value={index === 0 ? '' : dept} disabled={index === 0}>
                        {dept}
                      </option>
                    ))}
                  </select>
                </div>
              </div>
              
              <div className="space-y-1">
                <label htmlFor="password" className="block text-sm font-medium text-neutral-700 dark:text-neutral-300">
                  Password
                </label>
                <div className="relative">
                  <div className="absolute inset-y-0 left-0 flex items-center pl-3 text-neutral-500 dark:text-neutral-400">
                    <FiLock size={18} />
                  </div>
                  <input
                    id="password"
                    name="password"
                    type={showPassword ? 'text' : 'password'}
                    autoComplete="new-password"
                    required
                    value={formData.password}
                    onChange={handleChange}
                    className="block w-full rounded-xl border border-neutral-300 bg-white px-3 py-3 pl-10 pr-10 shadow-sm transition-colors focus:border-primary-400 focus:outline-none focus:ring-primary-400 dark:border-neutral-700 dark:bg-neutral-800/90 dark:text-white dark:focus:border-primary-400"
                    placeholder="Buat password"
                    minLength={6}
                  />
                  <button
                    type="button"
                    className="absolute inset-y-0 right-0 flex items-center px-3 text-neutral-500 transition-colors hover:text-neutral-700 dark:text-neutral-400 dark:hover:text-neutral-300"
                    onClick={() => setShowPassword(!showPassword)}
                  >
                    {showPassword ? <FiEyeOff size={18} /> : <FiEye size={18} />}
                  </button>
                </div>
                <p className="mt-1 text-xs text-neutral-500 dark:text-neutral-400">
                  Minimal 6 karakter, kombinasi huruf dan angka
                </p>
              </div>
              
              <div className="flex space-x-4 pt-2">
                <Button
                  type="button"
                  variant="outline"
                  onClick={prevStep}
                  className="flex-1 rounded-xl py-3"
                >
                  Kembali
                </Button>
                <Button
                  type="submit"
                  variant="primary"
                  className="flex-1 rounded-xl py-3 transition-all hover:shadow-lg"
                  disabled={isLoading}
                >
                  {isLoading ? 'Mendaftar...' : 'Daftar'}
                </Button>
              </div>
            </form>
          )}
          
          <div className="mt-6 text-center">
            <p className="text-sm text-neutral-600 dark:text-neutral-400">
              Sudah punya akun?{' '}
              <Link href="/login" className="font-semibold text-primary-400 hover:text-primary-500">
                Masuk
              </Link>
            </p>
          </div>
          
          <div className="mt-8 text-center text-xs text-neutral-500 dark:text-neutral-400">
            Dengan mendaftar, Anda menyetujui{' '}
            <Link href="/syarat-ketentuan" className="text-primary-400 hover:text-primary-500">
              Syarat & Ketentuan
            </Link>{' '}
            dan{' '}
            <Link href="/kebijakan-privasi" className="text-primary-400 hover:text-primary-500">
              Kebijakan Privasi
            </Link>{' '}
            kami.
          </div>
        </div>
      </div>
      
      {/* Decorative elements */}
      <div className="pointer-events-none fixed -bottom-16 -left-16 h-64 w-64 rounded-full bg-primary-300/20 blur-3xl filter dark:bg-primary-600/10"></div>
      <div className="pointer-events-none fixed -top-32 right-10 h-96 w-96 rounded-full bg-coral-300/20 blur-3xl filter dark:bg-coral-600/10"></div>
      <div className="pointer-events-none fixed bottom-10 right-10 h-64 w-64 rounded-full bg-mint-300/20 blur-3xl filter dark:bg-mint-600/10"></div>
    </div>
  );
};

export default RegisterPage;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\Footer.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\Footer.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\Footer.tsx ===
import Link from 'next/link';
import Logo from '@/components/ui/Logo';
import { FiInstagram, FiTwitter, FiLinkedin, FiYoutube } from 'react-icons/fi';

const Footer = () => {
  const currentYear = new Date().getFullYear();

  return (
    <footer className="bg-neutral-100 py-12 dark:bg-neutral-800">
      <div className="container mx-auto px-4 md:px-8">
        <div className="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-4">
          <div className="space-y-4">
            <Logo />
            <p className="text-neutral-600 dark:text-neutral-300">
              Repositori Online untuk Pelatihan dan Informasi - Solusi pembelajaran modern untuk generasi digital.
            </p>
            <div className="flex space-x-4">
              <a
                href="#"
                className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                aria-label="Instagram"
              >
                <FiInstagram size={20} />
              </a>
              <a
                href="#"
                className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                aria-label="Twitter"
              >
                <FiTwitter size={20} />
              </a>
              <a
                href="#"
                className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                aria-label="LinkedIn"
              >
                <FiLinkedin size={20} />
              </a>
              <a
                href="#"
                className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                aria-label="YouTube"
              >
                <FiYoutube size={20} />
              </a>
            </div>
          </div>

          <div>
            <h3 className="mb-4 font-poppins text-lg font-semibold">Platform</h3>
            <ul className="space-y-2">
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Kursus
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Jalur Belajar
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Sertifikasi
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Menjadi Instruktur
                </Link>
              </li>
            </ul>
          </div>

          <div>
            <h3 className="mb-4 font-poppins text-lg font-semibold">Perusahaan</h3>
            <ul className="space-y-2">
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Tentang Kami
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Karir
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Blog
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Partner
                </Link>
              </li>
            </ul>
          </div>

          <div>
            <h3 className="mb-4 font-poppins text-lg font-semibold">Dukungan</h3>
            <ul className="space-y-2">
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Bantuan
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  FAQ
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Kontak
                </Link>
              </li>
              <li>
                <Link
                  href="#"
                  className="text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
                >
                  Kebijakan Privasi
                </Link>
              </li>
            </ul>
          </div>
        </div>

        <div className="mt-12 border-t border-neutral-200 pt-8 dark:border-neutral-700">
          <div className="flex flex-col items-center justify-between space-y-4 md:flex-row md:space-y-0">
            <p className="text-center text-sm text-neutral-600 dark:text-neutral-400">
              &copy; {currentYear} ROTASI Learning Management System. Seluruh hak cipta dilindungi.
            </p>
            <div className="flex space-x-6">
              <Link
                href="#"
                className="text-sm text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
              >
                Syarat & Ketentuan
              </Link>
              <Link
                href="#"
                className="text-sm text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
              >
                Kebijakan Privasi
              </Link>
              <Link
                href="#"
                className="text-sm text-neutral-600 transition-colors hover:text-primary-500 dark:text-neutral-400 dark:hover:text-primary-400"
              >
                Cookies
              </Link>
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\Header.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\Header.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\Header.tsx ===
'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import { useDispatch, useSelector } from 'react-redux';
import { RootState } from '@/redux/store';
import { toggleTheme } from '@/redux/features/themeSlice';
import { FiSun, FiMoon, FiMenu, FiX } from 'react-icons/fi';
import Button from '@/components/ui/Button';
import Logo from '@/components/ui/Logo';

const Header = () => {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const darkMode = useSelector((state: RootState) => state.theme.darkMode);
  const dispatch = useDispatch();

  useEffect(() => {
    const handleScroll = () => {
      if (window.scrollY > 10) {
        setIsScrolled(true);
      } else {
        setIsScrolled(false);
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const toggleMenu = () => setIsMenuOpen(!isMenuOpen);
  const handleThemeToggle = () => dispatch(toggleTheme());

  return (
    <header
      className={`fixed left-0 right-0 top-0 z-50 transition-all duration-300 ${
        isScrolled
          ? 'bg-white/90 shadow backdrop-blur-md dark:bg-neutral-900/90'
          : 'bg-transparent'
      }`}
    >
      <div className="container mx-auto flex items-center justify-between px-4 py-4 md:px-8">
        <Logo />

        {/* Desktop Navigation */}
        <nav className="hidden md:block">
          <ul className="flex items-center space-x-20">
            <li>
              <Link
                href="#features"
                className="text-neutral-700 transition-colors hover:text-primary-400 dark:text-neutral-200 dark:hover:text-primary-400"
              >
                Fitur
              </Link>
            </li>
            <li>
              <Link
                href="#courses"
                className="text-neutral-700 transition-colors hover:text-primary-400 dark:text-neutral-200 dark:hover:text-primary-400"
              >
                Kursus
              </Link>
            </li>
            <li>
              <Link
                href="#testimonials"
                className="text-neutral-700 transition-colors hover:text-primary-400 dark:text-neutral-200 dark:hover:text-primary-400"
              >
                Testimoni
              </Link>
            </li>
          </ul>
        </nav>

        <div className="hidden items-center space-x-4 md:flex">
          <button
            onClick={handleThemeToggle}
            className="rounded-full p-2 text-neutral-700 transition-colors hover:bg-neutral-200 dark:text-neutral-200 dark:hover:bg-neutral-800"
            aria-label="Toggle theme"
          >
            {darkMode ? <FiSun size={20} /> : <FiMoon size={20} />}
          </button>
          <Link href="/login">
            <Button variant="outline" size="sm" className="rounded-xl">
              Masuk
            </Button>
          </Link>
          <Link href="/register">
            <Button variant="primary" size="sm" className="rounded-xl">
              Daftar
            </Button>
          </Link>
        </div>

        {/* Mobile Menu Button */}
        <div className="flex items-center space-x-4 md:hidden">
          <button
            onClick={handleThemeToggle}
            className="rounded-full p-2 text-neutral-700 transition-colors hover:bg-neutral-200 dark:text-neutral-200 dark:hover:bg-neutral-800"
            aria-label="Toggle theme"
          >
            {darkMode ? <FiSun size={20} /> : <FiMoon size={20} />}
          </button>
          <button
            onClick={toggleMenu}
            className="rounded-full p-2 text-neutral-700 transition-colors hover:bg-neutral-200 dark:text-neutral-200 dark:hover:bg-neutral-800"
            aria-label="Toggle menu"
          >
            {isMenuOpen ? <FiX size={24} /> : <FiMenu size={24} />}
          </button>
        </div>

        {/* Mobile Menu */}
        {isMenuOpen && (
          <div className="absolute left-0 right-0 top-full z-20 bg-white p-4 shadow-md dark:bg-neutral-900 md:hidden">
            <nav className="flex flex-col space-y-4">
              <Link
                href="#features"
                className="text-neutral-700 transition-colors hover:text-primary-400 dark:text-neutral-200 dark:hover:text-primary-400"
                onClick={() => setIsMenuOpen(false)}
              >
                Fitur
              </Link>
              <Link
                href="#courses"
                className="text-neutral-700 transition-colors hover:text-primary-400 dark:text-neutral-200 dark:hover:text-primary-400"
                onClick={() => setIsMenuOpen(false)}
              >
                Kursus
              </Link>
              <Link
                href="#testimonials"
                className="text-neutral-700 transition-colors hover:text-primary-400 dark:text-neutral-200 dark:hover:text-primary-400"
                onClick={() => setIsMenuOpen(false)}
              >
                Testimoni
              </Link>
              <div className="flex flex-col space-y-2 pt-4">
                <Link href="/login" onClick={() => setIsMenuOpen(false)}>
                  <Button variant="outline" fullWidth className="rounded-xl">
                    Masuk
                  </Button>
                </Link>
                <Link href="/register" onClick={() => setIsMenuOpen(false)}>
                  <Button variant="primary" fullWidth className="rounded-xl">
                    Daftar
                  </Button>
                </Link>
              </div>
            </nav>
          </div>
        )}
      </div>
    </header>
  );
};

export default Header;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\MainLayout.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\MainLayout.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\layout\MainLayout.tsx ===
'use client';

import { useEffect } from 'react';
import { useSelector } from 'react-redux';
import { RootState } from '@/redux/store';
import Header from '@/components/layout/Header';
import Footer from '@/components/layout/Footer';
import { Toaster } from '@/components/ui/Toaster';

export default function MainLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const darkMode = useSelector((state: RootState) => state.theme.darkMode);

  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [darkMode]);

  return (
    <div className="flex min-h-screen flex-col bg-neutral-50 text-neutral-900 antialiased transition-colors duration-200 dark:bg-neutral-900 dark:text-neutral-50">
      <Header />
      <main className="flex-grow">{children}</main>
      <Footer />
      <Toaster />
    </div>
  );
}
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\CoursesSection.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\CoursesSection.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\CoursesSection.tsx ===
'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';
import Image from 'next/image';
import Button from '@/components/ui/Button';
import { FiClock, FiStar, FiUsers, FiBookmark } from 'react-icons/fi';

const categories = [
  { id: 'all', name: 'Semua Kursus' },
  { id: 'programming', name: 'Pemrograman' },
  { id: 'design', name: 'Desain' },
  { id: 'business', name: 'Bisnis' },
  { id: 'marketing', name: 'Marketing' },
];

const courses = [
  {
    id: 1,
    title: 'Dasar-Dasar React.js untuk Pemula',
    description: 'Pelajari dasar-dasar React.js untuk membangun aplikasi web modern yang responsif dan interaktif.',
    instructor: 'Budi Santoso',
    duration: '12 jam',
    level: 'Pemula',
    students: 1245,
    rating: 4.7,
    category: 'programming',
    image: '/images/course-react.jpg',
  },
  {
    id: 2,
    title: 'UI/UX Design Fundamentals',
    description: 'Kuasai prinsip-prinsip dan praktik terbaik dalam merancang antarmuka pengguna yang efektif.',
    instructor: 'Diana Putri',
    duration: '18 jam',
    level: 'Menengah',
    students: 980,
    rating: 4.9,
    category: 'design',
    image: '/images/course-ux.jpg',
  },
  {
    id: 3,
    title: 'Digital Marketing Strategy',
    description: 'Strategi pemasaran digital terbaru untuk meningkatkan brand awareness dan konversi.',
    instructor: 'Rudi Hartono',
    duration: '15 jam',
    level: 'Semua Level',
    students: 1850,
    rating: 4.6,
    category: 'marketing',
    image: '/images/course-marketing.jpg',
  },
  {
    id: 4,
    title: 'E-Commerce Business Masterclass',
    description: 'Panduan lengkap membangun dan mengembangkan bisnis e-commerce yang sukses dari nol.',
    instructor: 'Sinta Wijaya',
    duration: '24 jam',
    level: 'Lanjutan',
    students: 756,
    rating: 4.8,
    category: 'business',
    image: '/images/course-business.jpg',
  },
];

const CoursesSection = () => {
  const [activeCategory, setActiveCategory] = useState('all');

  const filteredCourses = activeCategory === 'all'
    ? courses
    : courses.filter(course => course.category === activeCategory);

  return (
    <section id="courses" className="bg-neutral-50 py-20 dark:bg-neutral-800/30">
      <div className="container mx-auto px-4 md:px-8">
        <motion.div 
          className="mx-auto mb-16 max-w-3xl text-center"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
        >
          <h2 className="mb-4 font-poppins text-3xl font-bold md:text-4xl">
            Jelajahi Kursus Kami
          </h2>
          <p className="text-lg text-neutral-600 dark:text-neutral-300">
            Pilih dari berbagai kursus berkualitas tinggi yang dirancang oleh para ahli
          </p>
        </motion.div>

        <div className="mb-8 flex items-center justify-center">
          <div className="flex flex-wrap justify-center gap-2">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setActiveCategory(category.id)}
                className={`rounded-full px-4 py-2 text-sm font-medium transition-colors ${
                  activeCategory === category.id
                    ? 'bg-primary-400 text-white'
                    : 'bg-white text-neutral-600 hover:bg-neutral-100 dark:bg-neutral-800 dark:text-neutral-300 dark:hover:bg-neutral-700'
                }`}
              >
                {category.name}
              </button>
            ))}
          </div>
        </div>

        <motion.div 
          className="grid gap-8 sm:grid-cols-2 lg:grid-cols-4"
          layout
        >
          {filteredCourses.map((course) => (
            <motion.div
              key={course.id}
              layout
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              exit={{ opacity: 0, scale: 0.9 }}
              transition={{ duration: 0.3 }}
              className="group overflow-hidden rounded-xl bg-white shadow-md transition-all hover:shadow-lg dark:bg-neutral-800"
            >
              <div className="relative h-48 overflow-hidden">
                <Image
                  src={course.image}
                  alt={course.title}
                  className="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
                  width={400}
                  height={200}
                />
                <button className="absolute right-3 top-3 flex h-8 w-8 items-center justify-center rounded-full bg-white/80 text-neutral-600 backdrop-blur-sm transition-colors hover:bg-white hover:text-primary-400 dark:bg-neutral-800/80 dark:text-neutral-300">
                  <FiBookmark size={16} />
                </button>
              </div>
              <div className="p-5">
                <h3 className="mb-2 font-poppins text-lg font-semibold line-clamp-2">
                  {course.title}
                </h3>
                <p className="mb-4 text-sm text-neutral-600 dark:text-neutral-400 line-clamp-2">
                  {course.description}
                </p>
                <div className="mb-3 flex items-center justify-between text-sm">
                  <span className="flex items-center text-neutral-500 dark:text-neutral-400">
                    <FiClock className="mr-1" size={14} />
                    {course.duration}
                  </span>
                  <span className="flex items-center text-neutral-500 dark:text-neutral-400">
                    <FiUsers className="mr-1" size={14} />
                    {course.students}
                  </span>
                  <span className="flex items-center font-medium text-amber-500">
                    <FiStar className="mr-1" size={14} />
                    {course.rating}
                  </span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-neutral-500 dark:text-neutral-400">
                    {course.instructor}
                  </span>
                  <span className="rounded-full bg-primary-100 px-2 py-1 text-xs font-medium text-primary-600 dark:bg-primary-900/30 dark:text-primary-400">
                    {course.level}
                  </span>
                </div>
              </div>
              <div className="border-t border-neutral-100 px-5 py-3 dark:border-neutral-700">
                <Button variant="primary" fullWidth>Lihat Kursus</Button>
              </div>
            </motion.div>
          ))}
        </motion.div>

        <div className="mt-12 text-center">
          <Button size="lg" variant="outline">
            Lihat Semua Kursus
          </Button>
        </div>
      </div>
    </section>
  );
};

export default CoursesSection;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\CtaSection.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\CtaSection.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\CtaSection.tsx ===
'use client';

import { motion } from 'framer-motion';
import Link from 'next/link';
import Button from '@/components/ui/Button';
import { FiArrowRight } from 'react-icons/fi';

const CtaSection = () => {
  return (
    <section className="bg-gradient-to-r from-primary-500 to-primary-600 py-20 text-white">
      <div className="container mx-auto px-4 md:px-8">
        <div className="mx-auto max-w-4xl text-center">
          <motion.h2 
            className="mb-6 font-poppins text-3xl font-bold md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
          >
            Mulai Perjalanan Belajar Anda Sekarang
          </motion.h2>
          
          <motion.p 
            className="mb-8 text-lg opacity-90"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: 0.1 }}
          >
            Daftar dan dapatkan akses ke kursus dan materi pengantar. Tingkatkan keterampilan Anda dan buka peluang karir baru.
          </motion.p>
          
          <motion.div
            className="flex flex-col gap-4 sm:flex-row sm:justify-center"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: 0.2 }}
          >
            <Link href="/register">
              <button
                type="button"
                className="inline-flex items-center rounded-xl px-6 py-3 text-lg font-semibold text-primary-600 transition-all duration-200 bg-white border border-primary-300 shadow-sm hover:bg-primary-50 hover:border-primary-500 hover:shadow-lg"
              >
                Daftar
                <FiArrowRight className="ml-2 text-xl" />
              </button>
            </Link>
            <Link href="/login">
              <Button 
                size="lg" 
                variant="outline" 
                className="rounded-xl border-white text-white hover:bg-white/10"
              >
                Masuk
              </Button>
            </Link>
          </motion.div>
        </div>
      </div>
    </section>
  );
};

export default CtaSection;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\FeaturesSection.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\FeaturesSection.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\FeaturesSection.tsx ===
'use client';

import { motion } from 'framer-motion';
import { 
  FiMonitor, 
  FiUsers, 
  FiAward, 
  FiLayout, 
  FiBarChart2, 
  FiCheck, 
  FiBookOpen,
  FiSmartphone
} from 'react-icons/fi';

const features = [
  {
    icon: <FiMonitor size={32} className="text-primary-400" />,
    title: 'Dasbor Terpersonalisasi',
    description: 'Akses cepat ke semua kursus, progres, dan rekomendasi yang disesuaikan dengan minat belajar Anda.',
  },
  {
    icon: <FiBookOpen size={32} className="text-coral-400" />,
    title: 'Katalog Kursus Beragam',
    description: 'Pilihan kursus berkualitas tinggi dalam berbagai bidang dan tingkat keahlian.',
  },
  {
    icon: <FiUsers size={32} className="text-mint-400" />,
    title: 'Pembelajaran Sosial',
    description: 'Berkolaborasi dengan peserta lain melalui forum diskusi, grup belajar, dan proyek tim.',
  },
  {
    icon: <FiAward size={32} className="text-primary-400" />,
    title: 'Sertifikasi Profesional',
    description: 'Dapatkan sertifikat setelah menyelesaikan kursus.',
  },
  {
    icon: <FiBarChart2 size={32} className="text-mint-400" />,
    title: 'Analitik Pembelajaran',
    description: 'Pantau kemajuan belajar Anda dengan insights mendalam dan visualisasi yang jelas.',
  },
  {
    icon: <FiSmartphone size={32} className="text-primary-400" />,
    title: 'Mobile Learning',
    description: 'Belajar di mana saja dan kapan saja dengan aplikasi mobile yang responsif dan offline mode.',
  },
];

const FeaturesSection = () => {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        duration: 0.5,
      },
    },
  };

  return (
    <section id="features" className="py-20">
      <div className="container mx-auto px-4 md:px-8">
        <motion.div 
          className="mx-auto mb-16 max-w-3xl text-center"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
        >
          <h2 className="mb-4 font-poppins text-3xl font-bold md:text-4xl">
            Fitur Unggulan ROTASI
          </h2>
          <p className="text-lg text-neutral-600 dark:text-neutral-300">
            Platform pembelajaran modern dengan segala kebutuhan untuk pengalaman belajar yang optimal
          </p>
        </motion.div>

        <motion.div 
          className="grid gap-8 sm:grid-cols-2 lg:grid-cols-3"
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true }}
        >
          {features.map((feature, index) => (
            <motion.div
              key={index}
              variants={itemVariants}
              className="rounded-xl border border-neutral-200 bg-white p-6 shadow-sm transition-all hover:shadow-md dark:border-neutral-800 dark:bg-neutral-800/50"
            >
              <div className="mb-4 flex h-12 w-12 items-center justify-center rounded-lg bg-neutral-100 dark:bg-neutral-700">
                {feature.icon}
              </div>
              <h3 className="mb-2 font-poppins text-lg font-semibold">
                {feature.title}
              </h3>
              <p className="text-neutral-600 dark:text-neutral-300">
                {feature.description}
              </p>
            </motion.div>
          ))}
        </motion.div>
      </div>
    </section>
  );
};

export default FeaturesSection;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\HeroSection.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\HeroSection.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\HeroSection.tsx ===
'use client';

import { useRef } from 'react';
import Image from 'next/image';
import Link from 'next/link';
import { motion } from 'framer-motion';
import Button from '@/components/ui/Button';
import { FiArrowRight, FiPlay, FiX } from 'react-icons/fi';

const HeroSection = () => {
  const videoRef = useRef<HTMLDialogElement>(null);

  const openVideo = () => {
    if (videoRef.current) {
      videoRef.current.showModal();
    }
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
      },
    },
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        duration: 0.5,
      },
    },
  };

  return (
    <section className="relative overflow-hidden bg-gradient-to-b from-primary-50 to-white pb-16 pt-32 dark:from-neutral-900 dark:to-neutral-800">
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-1/2 left-1/2 h-[800px] w-[800px] -translate-x-1/2 rounded-full bg-gradient-to-br from-primary-400/10 to-primary-500/30 blur-3xl filter dark:from-primary-400/5 dark:to-primary-500/10"></div>
      </div>

      <div className="container relative mx-auto grid gap-12 px-4 md:px-8 lg:grid-cols-2 lg:gap-8">
        <motion.div
          className="flex flex-col justify-center"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          <motion.div variants={itemVariants} className="mb-4 inline-block rounded-full bg-primary-100 px-4 py-1 text-sm font-medium text-primary-600 dark:bg-primary-900/30 dark:text-primary-400">
            Platform LMS Generasi Baru
          </motion.div>
          <motion.h1 
            variants={itemVariants} 
            className="mb-6 font-poppins text-4xl font-bold leading-tight tracking-tight md:text-5xl lg:text-6xl"
          >
            Belajar Tanpa Batas di 
            <span className="bg-gradient-to-r from-primary-400 to-primary-600 bg-clip-text text-transparent">
              {' '}ROTASI
            </span>
          </motion.h1>
          <motion.p variants={itemVariants} className="mb-8 text-lg text-neutral-600 dark:text-neutral-300">
            Platform pembelajaran komprehensif yang dirancang untuk memaksimalkan potensi belajar mengajar di era digital. Akses kursus berkualitas tinggi kapan saja, di mana saja.
          </motion.p>
          <motion.div variants={itemVariants} className="flex flex-wrap gap-4">
            <Link href="/register">
              <Button size="lg" className="group rounded-xl">
                Mulai Sekarang
                <FiArrowRight className="ml-2 transition-transform group-hover:translate-x-1" />
              </Button>
            </Link>
            <Button 
              variant="outline" 
              size="lg" 
              onClick={openVideo}
              className="group rounded-xl"
            >
              <FiPlay className="mr-2 text-primary-400" />
              Tonton Demo
            </Button>
          </motion.div>
          <motion.div variants={itemVariants} className="mt-8 flex items-center text-sm text-neutral-500 dark:text-neutral-400">
            <div className="flex -space-x-2">
              {[1, 2, 3, 4, 5].map((i) => (
                <div 
                  key={i} 
                  className="h-8 w-8 overflow-hidden rounded-full border-2 border-white dark:border-neutral-800"
                >
                  <div className={`h-full w-full bg-primary-${i * 100}`}></div>
                </div>
              ))}
            </div>
            <span className="ml-4">
              Bergabung dengan <span className="font-bold">10,000+</span> pelajar
            </span>
          </motion.div>
        </motion.div>

        <motion.div 
          className="relative flex items-center justify-center"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ 
            duration: 0.8,
            delay: 0.5
          }}
        >
          <div className="relative h-[400px] w-full overflow-hidden rounded-xl shadow-floating md:h-[500px]">
            <div className="absolute inset-0 bg-gradient-to-br from-primary-100 to-mint-100 dark:from-primary-900/30 dark:to-mint-900/30"></div>
            <div className="relative h-full w-full">
              <Image
                src="/images/dashboard-preview.png"
                alt="ROTASI LMS Dashboard Preview"
                fill
                style={{ objectFit: 'contain' }}
                className="p-4"
              />
            </div>
          </div>
          {/* Decoration elements */}
          <div className="absolute -right-6 -top-6 h-20 w-20 rounded-lg bg-mint-400/20 backdrop-blur-md"></div>
          <div className="absolute -bottom-8 -left-8 h-16 w-16 rounded-lg bg-coral-400/20 backdrop-blur-md"></div>
          <div className="absolute bottom-12 right-12 h-12 w-12 animate-float rounded-full bg-primary-400/20 backdrop-blur-md"></div>
        </motion.div>
      </div>

      {/* Video Dialog */}
      <dialog
        ref={videoRef}
        className="rounded-lg bg-transparent p-0 backdrop:bg-neutral-900/80"
        onClick={(e) => {
          if (e.target === videoRef.current) {
            videoRef.current?.close();
          }
        }}
      >
        <div className="relative max-w-3xl">
          <button
            onClick={() => videoRef.current?.close()}
            className="absolute -right-3 -top-3 flex h-8 w-8 items-center justify-center rounded-full bg-white text-neutral-800 shadow-md"
          >
            <FiX />
          </button>
          <div className="aspect-video w-full overflow-hidden rounded-lg">
            {/* Replace with actual video element */}
            <div className="flex h-full w-full items-center justify-center bg-neutral-800 p-4 text-white">
              Video demo ROTASI LMS
            </div>
          </div>
        </div>
      </dialog>
    </section>
  );
};

export default HeroSection;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\TestimonialsSection.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\TestimonialsSection.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\sections\TestimonialsSection.tsx ===
'use client';

import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import Image from 'next/image';
import { FiChevronLeft, FiChevronRight } from 'react-icons/fi';

const testimonials = [
  {
    id: 1,
    content: 'ROTASI mengubah cara saya belajar coding. Antarmuka yang intuitif dan jalur pembelajaran yang terstruktur membantu saya menjadi developer web dalam waktu kurang dari 6 bulan.',
    name: 'Ahmad Fauzi',
    title: 'Frontend Developer',
    avatar: '/images/avatar-1.jpg',
  },
  {
    id: 2,
    content: 'Sebagai instruktur, saya sangat terkesan dengan kemudahan pembuatan kursus di ROTASI. Tools dan analitik yang disediakan sangat membantu untuk meningkatkan kualitas kursus saya.',
    name: 'Dina Maulida',
    title: 'UX Design Instructor',
    avatar: '/images/avatar-2.jpg',
  },
  {
    id: 3,
    content: 'Sistem sertifikasi ROTASI diakui di perusahaan kami. Beberapa karyawan terbaik kami adalah lulusan dari kursus intensif ROTASI Learning Management System.',
    name: 'Budi Santoso',
    title: 'HR Manager at TechCorp',
    avatar: '/images/avatar-3.jpg',
  },
  {
    id: 4,
    content: 'Fleksibilitas belajar di ROTASI sangat cocok dengan jadwal saya yang padat. Saya bisa belajar kapan saja, di mana saja, bahkan offline dengan fitur download materi.',
    name: 'Sinta Wijaya',
    title: 'Marketing Professional',
    avatar: '/images/avatar-4.jpg',
  },
];

const TestimonialsSection = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isAutoplay, setIsAutoplay] = useState(true);
  
  const nextTestimonial = () => {
    setCurrentIndex((prevIndex) => (prevIndex + 1) % testimonials.length);
  };
  
  const prevTestimonial = () => {
    setCurrentIndex((prevIndex) => (prevIndex - 1 + testimonials.length) % testimonials.length);
  };

  useEffect(() => {
    if (!isAutoplay) return;
    
    const interval = setInterval(() => {
      nextTestimonial();
    }, 5000);
    
    return () => clearInterval(interval);
  }, [isAutoplay, currentIndex]);
  
  const pauseAutoplay = () => setIsAutoplay(false);
  
  return (
    <section id="testimonials" className="py-20">
      <div className="container mx-auto px-4 md:px-8">
        <motion.div 
          className="mx-auto mb-16 max-w-3xl text-center"
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5 }}
        >
          <h2 className="mb-4 font-poppins text-3xl font-bold md:text-4xl">
            Apa Kata Mereka
          </h2>
          <p className="text-lg text-neutral-600 dark:text-neutral-300">
            Pengalaman dari pengguna yang telah merasakan manfaat belajar di ROTASI
          </p>
        </motion.div>

        <div className="relative mx-auto max-w-4xl">
          <div 
            className="overflow-hidden rounded-2xl bg-white p-6 shadow-lg dark:bg-neutral-800 md:p-10"
            onMouseEnter={pauseAutoplay}
            onTouchStart={pauseAutoplay}
          >
            <AnimatePresence mode="wait">
              <motion.div
                key={currentIndex}
                initial={{ opacity: 0, x: 100 }}
                animate={{ opacity: 1, x: 0 }}
                exit={{ opacity: 0, x: -100 }}
                transition={{ duration: 0.5 }}
                className="flex flex-col items-center text-center"
              >
                <div className="mb-6 h-20 w-20 overflow-hidden rounded-full border-4 border-primary-100 dark:border-primary-900">
                  <Image
                    src={testimonials[currentIndex].avatar}
                    alt={testimonials[currentIndex].name}
                    width={80}
                    height={80}
                    className="h-full w-full object-cover"
                  />
                </div>
                <p className="mb-6 text-lg italic text-neutral-700 dark:text-neutral-300 md:text-xl">
                  "{testimonials[currentIndex].content}"
                </p>
                <h4 className="font-poppins text-lg font-semibold">
                  {testimonials[currentIndex].name}
                </h4>
                <p className="text-neutral-500 dark:text-neutral-400">
                  {testimonials[currentIndex].title}
                </p>
              </motion.div>
            </AnimatePresence>
          </div>

          {/* Navigation Controls */}
          <div className="mt-8 flex justify-center gap-4">
            <button
              onClick={prevTestimonial}
              className="flex h-10 w-10 items-center justify-center rounded-full border border-neutral-200 text-neutral-500 transition-colors hover:bg-primary-50 hover:text-primary-500 dark:border-neutral-700 dark:hover:bg-neutral-800 dark:hover:text-primary-400"
              aria-label="Previous testimonial"
            >
              <FiChevronLeft size={20} />
            </button>
            <div className="flex items-center gap-2">
              {testimonials.map((_, index) => (
                <button
                  key={index}
                  onClick={() => {
                    setCurrentIndex(index);
                    setIsAutoplay(false);
                  }}
                  className={`h-2.5 w-2.5 rounded-full transition-all ${
                    index === currentIndex
                      ? 'bg-primary-500 w-6'
                      : 'bg-neutral-300 dark:bg-neutral-600'
                  }`}
                  aria-label={`Go to testimonial ${index + 1}`}
                />
              ))}
            </div>
            <button
              onClick={nextTestimonial}
              className="flex h-10 w-10 items-center justify-center rounded-full border border-neutral-200 text-neutral-500 transition-colors hover:bg-primary-50 hover:text-primary-500 dark:border-neutral-700 dark:hover:bg-neutral-800 dark:hover:text-primary-400"
              aria-label="Next testimonial"
            >
              <FiChevronRight size={20} />
            </button>
          </div>
        </div>
      </div>
    </section>
  );
};

export default TestimonialsSection;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Button.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Button.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Button.tsx ===
import { ButtonHTMLAttributes, ReactNode } from 'react';

type ButtonProps = {
  children: ReactNode;
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  fullWidth?: boolean;
  className?: string;
} & ButtonHTMLAttributes<HTMLButtonElement>;

const Button = ({
  children,
  variant = 'primary',
  size = 'md',
  fullWidth = false,
  className = '',
  ...props
}: ButtonProps) => {
  const baseStyle = 'inline-flex items-center justify-center rounded-lg font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-primary-400 focus:ring-offset-2 dark:focus:ring-offset-neutral-900';
  
  const variantStyles = {
    primary: 'bg-primary-400 text-white hover:bg-primary-500 active:bg-primary-600',
    secondary: 'bg-coral-400 text-white hover:bg-coral-500 active:bg-coral-600',
    outline: 'border border-neutral-300 bg-transparent text-neutral-800 hover:bg-neutral-100 dark:border-neutral-700 dark:text-neutral-200 dark:hover:bg-neutral-800',
    ghost: 'bg-transparent text-neutral-800 hover:bg-neutral-100 dark:text-neutral-200 dark:hover:bg-neutral-800',
  };
  
  const sizeStyles = {
    sm: 'px-3 py-1.5 text-sm',
    md: 'px-4 py-2',
    lg: 'px-6 py-3 text-lg',
  };
  
  const widthStyle = fullWidth ? 'w-full' : '';
  
  return (
    <button
      className={`${baseStyle} ${variantStyles[variant]} ${sizeStyles[size]} ${widthStyle} ${className}`}
      {...props}
    >
      {children}
    </button>
  );
};

export default Button;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Logo.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Logo.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Logo.tsx ===
import Link from 'next/link';

const Logo = ({ className = '' }: { className?: string }) => {
  return (
    <Link href="/" className={`flex items-center ${className}`}>
      <span className="flex items-center">
        <span className="mr-1 block h-10 w-10 rounded-lg bg-gradient-to-br from-primary-400 to-primary-600 transition-all"></span>
        <span className="font-poppins text-2xl font-bold tracking-tight">
          ROT<span className="text-primary-400">A</span>SI
        </span>
      </span>
    </Link>
  );
};

export default Logo;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Toaster.tsx ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Toaster.tsx" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\components\ui\Toaster.tsx ===
import { useState, useEffect, createContext, useContext, ReactNode } from 'react';
import { FiAlertCircle, FiCheckCircle, FiInfo, FiX } from 'react-icons/fi';

type ToastType = 'success' | 'error' | 'info';

type Toast = {
  id: string;
  type: ToastType;
  message: string;
};

type ToastContextType = {
  showToast: (message: string, type: ToastType) => void;
};

const ToastContext = createContext<ToastContextType | undefined>(undefined);

export const useToast = () => {
  const context = useContext(ToastContext);
  if (!context) {
    throw new Error('useToast must be used within a ToastProvider');
  }
  return context;
};

export const ToastProvider = ({ children }: { children: ReactNode }) => {
  const [toasts, setToasts] = useState<Toast[]>([]);

  const showToast = (message: string, type: ToastType) => {
    const id = Math.random().toString(36).substring(2, 9);
    setToasts((prev) => [...prev, { id, type, message }]);
  };

  const removeToast = (id: string) => {
    setToasts((prev) => prev.filter((toast) => toast.id !== id));
  };

  return (
    <ToastContext.Provider value={{ showToast }}>
      {children}
      <div className="fixed bottom-4 right-4 z-50 flex flex-col gap-2">
        {toasts.map((toast) => (
          <ToastItem key={toast.id} toast={toast} onClose={() => removeToast(toast.id)} />
        ))}
      </div>
    </ToastContext.Provider>
  );
};

const ToastItem = ({ toast, onClose }: { toast: Toast; onClose: () => void }) => {
  useEffect(() => {
    const timer = setTimeout(() => {
      onClose();
    }, 5000);

    return () => clearTimeout(timer);
  }, [onClose]);

  const { type, message } = toast;

  const icons = {
    success: <FiCheckCircle className="text-green-500" size={18} />,
    error: <FiAlertCircle className="text-red-500" size={18} />,
    info: <FiInfo className="text-blue-500" size={18} />,
  };

  const backgrounds = {
    success: 'bg-green-50 dark:bg-green-900/20',
    error: 'bg-red-50 dark:bg-red-900/20',
    info: 'bg-blue-50 dark:bg-blue-900/20',
  };

  const borders = {
    success: 'border-green-200 dark:border-green-800',
    error: 'border-red-200 dark:border-red-800',
    info: 'border-blue-200 dark:border-blue-800',
  };

  return (
    <div
      className={`flex w-72 items-center justify-between rounded-lg border p-3 shadow-md ${backgrounds[type]} ${borders[type]} animate-in slide-in-from-right`}
    >
      <div className="flex items-center gap-2">
        {icons[type]}
        <p className="text-sm text-neutral-800 dark:text-neutral-200">{message}</p>
      </div>
      <button
        onClick={onClose}
        className="text-neutral-500 hover:text-neutral-700 dark:text-neutral-400 dark:hover:text-neutral-200"
      >
        <FiX size={16} />
      </button>
    </div>
  );
};

export const Toaster = () => {
  return null; // This component is just for convenience when importing
};
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\lib\reactQuery.ts ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\lib\reactQuery.ts" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\lib\reactQuery.ts ===
import { QueryClient } from '@tanstack/react-query';

export const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      retry: 1,
      staleTime: 5 * 60 * 1000, // 5 minutes
    },
  },
});
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\redux\store.ts ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\redux\store.ts" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\redux\store.ts ===
import { configureStore } from '@reduxjs/toolkit';
import themeReducer from './features/themeSlice';

export const store = configureStore({
  reducer: {
    theme: themeReducer,
  },
});

export type RootState = ReturnType<typeof store.getState>;
export type AppDispatch = typeof store.dispatch;
C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src>(
echo === C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\redux\features\themeSlice.ts ===  
 type "C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\redux\features\themeSlice.ts" 
) 
=== C:\Users\junior.wibisono\Downloads\Documents\rotasi-lms\client\src\redux\features\themeSlice.ts ===
import { createSlice, PayloadAction } from '@reduxjs/toolkit';

type ThemeState = {
  darkMode: boolean;
};

// Check if we're in a browser environment and get the saved preference
const getBrowserTheme = (): boolean => {
  if (typeof window !== 'undefined') {
    // Check if there's a saved preference in localStorage
    const savedTheme = localStorage.getItem('darkMode');
    if (savedTheme !== null) {
      return savedTheme === 'true';
    }
    
    // If no saved preference, check for system preference
    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return true;
    }
  }
  return false;
};

const initialState: ThemeState = {
  darkMode: getBrowserTheme(),
};

export const themeSlice = createSlice({
  name: 'theme',
  initialState,
  reducers: {
    toggleTheme: (state) => {
      state.darkMode = !state.darkMode;
      // Save to localStorage when toggle happens
      if (typeof window !== 'undefined') {
        localStorage.setItem('darkMode', state.darkMode.toString());
      }
    },
    setTheme: (state, action: PayloadAction<boolean>) => {
      state.darkMode = action.payload;
      // Save to localStorage when explicitly set
      if (typeof window !== 'undefined') {
        localStorage.setItem('darkMode', action.payload.toString());
      }
    },
  },
});

export const { toggleTheme, setTheme } = themeSlice.actions;
export default themeSlice.reducer;